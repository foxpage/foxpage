// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`builder-condition-edit-drawer match snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(withImmutablePropsToJS(EditDrawer))
    applicationId="appl_uagWz8CC8WxD3Ux"
    folderId="fold_kPrzikuRoPxg9gg"
    onSave={[MockFunction]}
  >
    <withImmutablePropsToJS(EditDrawer)
      applicationId="appl_uagWz8CC8WxD3Ux"
      closeDrawer={[Function]}
      editVariable={
        Object {
          "content": Object {
            "id": "cont_46luBSreOoci1B5",
            "schemas": Array [
              Object {
                "name": "arerererere",
                "props": Object {
                  "type": "json",
                  "value": Object {
                    "label": 1,
                  },
                },
                "type": "data.static",
              },
            ],
          },
          "contentId": "cont_46luBSreOoci1B5",
          "id": "file_bp5d5V7jNOgpnGT",
          "name": "arerererere",
          "relations": Object {},
          "type": "variable",
        }
      }
      editorDrawerOpen={true}
      folderId="fold_kPrzikuRoPxg9gg"
      onSave={[MockFunction]}
      update={[Function]}
      updateContent={[Function]}
      updateRelation={[Function]}
      updateVariableContentProps={[Function]}
      updateVariableRelations={[Function]}
    >
      <Wrapper
        applicationId="appl_uagWz8CC8WxD3Ux"
        closeDrawer={[Function]}
        editVariable={
          Object {
            "content": Object {
              "id": "cont_46luBSreOoci1B5",
              "schemas": Array [
                Object {
                  "name": "arerererere",
                  "props": Object {
                    "type": "json",
                    "value": Object {
                      "label": 1,
                    },
                  },
                  "type": "data.static",
                },
              ],
            },
            "contentId": "cont_46luBSreOoci1B5",
            "id": "file_bp5d5V7jNOgpnGT",
            "name": "arerererere",
            "relations": Object {},
            "type": "variable",
          }
        }
        editorDrawerOpen={true}
        folderId="fold_kPrzikuRoPxg9gg"
        forwardedRef={null}
        onSave={[MockFunction]}
        update={[Function]}
        updateContent={[Function]}
        updateRelation={[Function]}
        updateVariableContentProps={[Function]}
        updateVariableRelations={[Function]}
      >
        <EditDrawer
          applicationId="appl_uagWz8CC8WxD3Ux"
          closeDrawer={[Function]}
          editVariable={
            Object {
              "content": Object {
                "id": "cont_46luBSreOoci1B5",
                "schemas": Array [
                  Object {
                    "name": "arerererere",
                    "props": Object {
                      "type": "json",
                      "value": Object {
                        "label": 1,
                      },
                    },
                    "type": "data.static",
                  },
                ],
              },
              "contentId": "cont_46luBSreOoci1B5",
              "id": "file_bp5d5V7jNOgpnGT",
              "name": "arerererere",
              "relations": Object {},
              "type": "variable",
            }
          }
          editorDrawerOpen={true}
          folderId="fold_kPrzikuRoPxg9gg"
          onSave={[MockFunction]}
          update={[Function]}
          updateContent={[Function]}
          updateRelation={[Function]}
          updateVariableContentProps={[Function]}
          updateVariableRelations={[Function]}
        >
          <OperationDrawer
            actions={
              <Button
                onClick={[Function]}
                type="primary"
              >
                Apply
              </Button>
            }
            anchor="right"
            canExpend={false}
            destroyOnClose={true}
            maskClosable={true}
            onClose={[Function]}
            open={true}
            title="Edit"
            width={480}
          >
            <Styled(DrawerWrapper)
              closable={false}
              destroyOnClose={true}
              key="jnhIWU_Q0rG"
              maskClosable={true}
              onClose={[Function]}
              placement="right"
              visible={false}
              width={480}
            >
              <DrawerWrapper
                className="sc-dkPtRN cfcQnA"
                closable={false}
                destroyOnClose={true}
                maskClosable={true}
                onClose={[Function]}
                placement="right"
                visible={false}
                width={480}
              >
                <Drawer
                  className="sc-dkPtRN cfcQnA"
                  closable={false}
                  destroyOnClose={true}
                  maskClosable={true}
                  onClose={[Function]}
                  placement="right"
                  prefixCls="ant-drawer"
                  visible={false}
                  width={480}
                >
                  <DrawerWrapper
                    afterVisibleChange={[Function]}
                    autoFocus={true}
                    className="sc-dkPtRN cfcQnA"
                    defaultOpen={false}
                    duration=".3s"
                    ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                    forceRender={false}
                    getContainer="body"
                    handler={false}
                    keyboard={true}
                    level={null}
                    maskClosable={true}
                    maskStyle={Object {}}
                    onChange={[Function]}
                    onClose={[Function]}
                    open={false}
                    placement="right"
                    prefixCls="ant-drawer"
                    showMask={true}
                    style={
                      Object {
                        "transform": undefined,
                        "zIndex": undefined,
                      }
                    }
                    width={480}
                    wrapperClassName=""
                  >
                    <PortalWrapper
                      forceRender={false}
                      getContainer="body"
                      visible={false}
                      wrapperClassName=""
                    />
                  </DrawerWrapper>
                </Drawer>
              </DrawerWrapper>
            </Styled(DrawerWrapper)>
          </OperationDrawer>
        </EditDrawer>
      </Wrapper>
    </withImmutablePropsToJS(EditDrawer)>
  </Connect(withImmutablePropsToJS(EditDrawer))>
</Provider>
`;
